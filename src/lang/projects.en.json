[
    {
        "name": "Historical Ink: SSD",
        "description": "This paper explores the evolution of word meanings in 19th-century Spanish texts, with an emphasis on Latin American Spanish, using computational linguistics techniques. It addresses the Semantic Shift Detection (SSD) task, which is crucial for understanding linguistic evolution, particularly in historical contexts. The study focuses on analyzing a set of Spanish target words. To achieve this, a 19th-century Spanish corpus is constructed, and a customizable pipeline for SSD tasks is developed. This pipeline helps find the senses of a word and measure their semantic change between two corpora using fine-tuned BERT-like models with old Spanish texts for both Latin American and general Spanish cases. The results provide valuable insights into the cultural and societal shifts reflected in language changes over time",
        "subject": "Thesis - Systems Engineering",
        "date": "Aug, 2024",
        "authors": [
            "Tony Montes",
            "Laura Manrique-Gómez",
            "Rubén Manrique"
        ],
        "technologies": [
            "NLP",
            "PyTorch",
            "Transformers",
            "BERT",
            "DWUG"
        ],
        "tags": [
            "Thesis",
            "NLP",
            "Machine Learning",
            "AI",
            "Corpus",
            "SSD"
        ],
        "links": {
            "Paper": "https://aclanthology.org/2024.lchange-1.4",
            "Video": "https://www.youtube.com/watch?v=A7ZRssbslDE",
            "Github": "https://github.com/historicalink/SSD-Old-Spanish",
            "Notebook": "https://colab.research.google.com/drive/1eaULQocxyuCNX0ftBvDJwe8nfpEi5s6i"
        },
        "icon": "./img/projects/SSD/logo.jpg",
        "images": [
            "./img/projects/SSD/pipeline.png",
            "./img/projects/SSD/corpus.png",
            "./img/projects/SSD/muj.png",
            "./img/projects/SSD/dwugs.png"
        ]
    },
    {
        "name": "Historical Ink: LLM OCR-Correction",
        "description": "This paper presents two significant contributions: first, a novel dataset of 19th-century Latin American press texts, which addresses the lack of specialized corpora for historical and linguistic analysis in this region. Second, it introduces a framework for OCR error correction and linguistic surface form detection in digitized corpora, utilizing a Large Language Model. This framework is adaptable to various contexts and, in this paper, is specifically applied to the newly created dataset.",
        "subject": "Thesis - Systems Engineering",
        "date": "Jul, 2024",
        "authors": [
            "Laura Manrique-Gómez",
            "Tony Montes",
            "Rubén Manrique"
        ],
        "technologies": [
            "NLP",
            "NLTK",
            "Pandas"
        ],
        "tags": [
            "Thesis",
            "NLP",
            "Machine Learning",
            "AI",
            "Corpus",
            "LLM",
            "OCR"
        ],
        "links": {
            "Paper": "https://arxiv.org/abs/2407.12838",
            "Github": "https://github.com/historicalink/LatamXIX"
        },
        "icon": "./img/projects/LLM-OCR-C/difflib.png",
        "images": [
            "./img/projects/LLM-OCR-C/diff-newspapers.png",
            "./img/projects/LLM-OCR-C/errors.png",
            "./img/projects/LLM-OCR-C/corrections.png",
            "./img/projects/LLM-OCR-C/crrc.png",
            "./img/projects/LLM-OCR-C/nb-corr.png"
        ]
    },
    {
        "name": "WooperNLP @ Axolotl24",
        "description": "We participated in the Axolotl24 shared task co-located at ACL 2024. This involves subtasks of identifying unknown/novel senses (subtask 1) and providing dictionary-like definitions of these senses, so-called glosses (subtask 2). Our solution, against the common sense of first finding the novel meanings and then crafting a definition for them, aimed to take advantage of the ability of LLMs such as GPT-3.5 to generate such definitions (subtask 2), and then, use the glosses to find the novel senses (subtask 1), as well as also detecting the novel senses by the examples themselves, for comparison. Some of the findings from this solution are that LLMs doesn't perform very well on old-meaning (19th-century) word definitions due to the lack of it's training data from this century, but the methodology itself seems promising for more modern descriptions of words.",
        "subject": "Participation @ Shared Task",
        "date": "Apr, 2024",
        "authors": [
            "Tony Montes",
            "Luccas Rojas",
            "Daniel Gómez-Barrera",
            "Rubén Manrique"
        ],
        "technologies": [
            "NLP",
            "PyTorch",
            "Transformers",
            "sentence-transformers",
            "LLM"
        ],
        "tags": [
            "Shared Task",
            "Axolotl 2024",
            "NLP",
            "Machine Learning",
            "AI",
            "LLM",
            "Senses"
        ],
        "links": {
            "Github": "https://github.com/t-montes/Axolotl24",
            "Axolotl24 Paper": "https://aclanthology.org/2024.lchange-1.8/",
            "Shared Task": "https://github.com/ltgoslo/axolotl24_shared_task#readme",
            "Codalab": "https://codalab.lisn.upsaclay.fr/competitions/18009"
        },
        "icon": "./img/projects/WooperNLP/axolotl24.png",
        "images": [
            "./img/projects/WooperNLP/woopernlp.png",
            "./img/projects/WooperNLP/woopernlp2.png"
        ]
    },
    {
        "name": "UMeet",
        "description": "UMeet is an innovative, responsive web application designed in React and NestJS for college students that makes schedule coordination easy. It allows you to automatically upload schedules from the university, explore colleagues' schedules, and organize meetings and social events. Unlike other tools, UMeet focuses on academic needs, optimizing time management and encouraging efficient interaction between students or between students and teachers. The web application follows well design practices for web development apps such as PWA for connectivity issues, accessibility and internationalization.",
        "subject": "Web Development",
        "date": "Dec, 2023",
        "authors": [
            "Tony Montes",
            "David S. Ortiz",
            "Thais Tamaio"
        ],
        "technologies": [
            "JS",
            "React",
            "TS",
            "NestJS",
            "PostgreSQL",
            "JWT"
        ],
        "tags": [
            "Web App",
            "Meetings",
            "Calendar"
        ],
        "links": {
            "Github Backend": "https://github.com/t-montes/UMeet_Back",
            "Github Frontend": "https://github.com/t-montes/UMeet_Front"
        },
        "icon": "./img/projects/UMeet/large-logo.png",
        "images": [
            "./img/projects/UMeet/1.png",
            "./img/projects/UMeet/2.png",
            "./img/projects/UMeet/3.png",
            "./img/projects/UMeet/4.png",
            "./img/projects/UMeet/5.png",
            "./img/projects/UMeet/6.png",
            "./img/projects/UMeet/7.png",
            "./img/projects/UMeet/8.png",
            "./img/projects/UMeet/9.png",
            "./img/projects/UMeet/mob1.png",
            "./img/projects/UMeet/mob2.png",
            "./img/projects/UMeet/mob3.png"
        ]
    },
    {
        "name": "Hive",
        "description": "Hive is a unique mobile app fitted for Uniandes students developed in both Flutter and Kotlin versions, addressing the process of creating interest-based groups, fostering social connections among students with similar hobbies and promoting initiatives, as well as giving importance to the university events in different topics, to make it easier for students to find the events of their interest. Hive offers a set of functionalities useful for both students and event organizers; some of them include the smart feature that recommends events and groups based on user interests automatically, and a feature of sharing and scanning events through a QR code.",
        "subject": "Mobile App Development",
        "date": "Dec, 2023",
        "authors": [
            "Tony Montes",
            "Luccas Rojas",
            "Nicolás Rueda",
            "Daniel Aguilera",
            "Laura Martínez",
            "Cristian Sánchez"
        ],
        "technologies": [
            "Dart",
            "Python",
            "Flutter",
            "Kotlin",
            "Django",
            "Firebase",
            "PostgreSQL"
        ],
        "tags": [
            "Mobile App",
            "Android"
        ],
        "links": {
            "Documentation": "https://github.com/ISIS3510-202320-Team31/Wiki/wiki/sprint4",
            "Github Flutter": "https://github.com/ISIS3510-202320-Team31/Flutter",
            "Github Kotlin": "https://github.com/ISIS3510-202320-Team31/Android-Kotlin",
            "Github Backend": "https://github.com/ISIS3510-202320-Team31/Hive_Back"
        },
        "icon": "./img/projects/Hive/HIVE_LOGO.png",
        "images": [
            "./img/projects/Hive/1.gif",
            "./img/projects/Hive/2.gif",
            "./img/projects/Hive/3.gif",
            "./img/projects/Hive/4.png",
            "./img/projects/Hive/5.png",
            "./img/projects/Hive/6.jpeg",
            "./img/projects/Hive/7.jpeg",
            "./img/projects/Hive/8.jpeg",
            "./img/projects/Hive/9.jpeg"
        ]
    },
    {
        "name": "SITP IoT",
        "description": "The project aims to enhance the user experience in Bogotá's Integrated Public Transportation System (SITP) through the implementation of an IoT network. It will address the lack of information at stations, allowing users to receive real-time and accurate wait times without relying on mobile devices or internet connectivity. The proposal is about establishing a communication network between stops and buses to provide information on estimated arrival times. Screens at stops and intermediate nodes are emphasized to enhance information distribution and data collection. The system, which eliminates the need for GPS and internet connection at stops, aims to provide more accurate travel time estimates, and improve trip planning within the SITP.",
        "subject": "Internet of Everything",
        "date": "Dec, 2023",
        "authors": [
            "Tony Montes",
            "Brian Rivera",
            "Juan D. Calixto",
            "Felipe Florian"
        ],
        "technologies": [
            "CupCarbon",
            "GSC",
            "Python"
        ],
        "tags": [
            "IoT",
            "Simulation",
            "Public Transport",
            "SITP",
            "Automation"
        ],
        "links": {
            "Video": "https://youtu.be/Tv7xbcGWVfc",
            "Documentation": "https://github.com/t-montes/SITP-IoT/blob/master/Proyecto_Fase3.pdf",
            "Github": "https://github.com/t-montes/SITP-IoT"
        },
        "icon": "./img/projects/SITP IoT/sim3.png",
        "images": [
            "./img/projects/SITP IoT/sim1.png",
            "./img/projects/SITP IoT/sim2.png",
            "./img/projects/SITP IoT/sim3.png",
            "./img/projects/SITP IoT/diagram.png"
        ]
    },
    {
        "name": "Film Feedback",
        "description": "FilmFeedback is a sentiment analysis application for movie reviews. Its main objective is to predict whether a review is positive or negative, providing valuable information for companies in the content selection for streaming platforms. Initially, data cleaning for reviews was conducted using the NLTK library, with Seaborn utilized for distribution visualization. Three classification algorithms—Logistic Regression, Naive Bayes, and SVM—were employed for model selection, utilizing the scikit-learn library. Following proper data cleaning, Logistic Regression exhibited the best performance with an 86% accuracy, presenting an effective tool for business decision-making.",
        "subject": "Business Intelligence",
        "date": "May, 2023",
        "authors": [
            "Tony Montes",
            "Luccas Rojas",
            "Brian Rivera"
        ],
        "technologies": [
            "Python",
            "Scikit-Learn",
            "NLTK",
            "Seaborn",
            "Pandas",
            "Django"
        ],
        "tags": [
            "Machine Learning",
            "Logistic Regression",
            "Data Analysis",
            "Data Visualization",
            "API",
            "Web Page"
        ],
        "links": {
            "Github": "https://github.com/t-montes/FilmFeedback",
            "Jupyter Notebook": "https://github.com/t-montes/FilmFeedback/blob/master/docs_P1/Proyecto1BI.ipynb",
            "ML Documentation": "https://github.com/t-montes/FilmFeedback/blob/master/docs_P1/Proyecto1BI-documentacion.pdf",
            "App Documentation": "https://github.com/t-montes/FilmFeedback/blob/master/docs_P2/Proyecto1BI-documentacion2.pdf"
        },
        "icon": "./img/projects/Film Feedback/icon.png",
        "images": [
            "./img/projects/Film Feedback/1.png",
            "./img/projects/Film Feedback/2.png",
            "./img/projects/Film Feedback/3.png"
        ]
    },
    {
        "name": "NMP Robot",
        "description": "The NMP Robot, dedicated to Navigation, Manipulation, and Perception tasks, operates within the Robot Operating System (ROS). Crafted for full autonomy in a compact 20cm x 20cm frame, powered by batteries, the robot exclusively communicates through ROS nodes and services. For navigation, we implemented the A* path planning algorithm, optimizing the route amid obstacles. OpenCV facilitated the perception task, detecting color, geometric shapes, and words via OCR. In manipulation, kinematic equations ensured precise manipulator positioning, after manipulator servomotors characterization. These implementations led the NMP Robot to conquer all three challenges successfully.",
        "subject": "Robotics",
        "date": "Jun, 2023",
        "authors": [
            "Tony Montes",
            "Sebastian Guerrero",
            "M. Fernanda Tarquino",
            "Satiago Rueda"
        ],
        "technologies": [
            "Python",
            "ROS",
            "OpenCV",
            "A*",
            "Arduino"
        ],
        "tags": [
            "Automatic Navigation",
            "Automatic Manipulation",
            "Computer Vision",
            "Localization",
            "Path Planning",
            "Mapping"
        ],
        "links": {
            "Navigation Test Video": "https://youtube.com/shorts/DkTncyIRM6M?feature=share",
            "Github": "https://github.com/orgs/Bogota-Dynamics/repositories"
        },
        "icon": "./img/projects/NMP Robot/icon.jpeg",
        "images": [
            "./img/projects/NMP Robot/whole.jpeg",
            "./img/projects/NMP Robot/front.jpeg",
            "./img/projects/NMP Robot/lateral.jpeg",
            "./img/projects/NMP Robot/start.jpeg",
            "./img/projects/NMP Robot/track.jpeg",
            "./img/projects/NMP Robot/wide_grid_45px.png",
            "./img/projects/NMP Robot/path.png"
        ]
    },
    {
        "name": "Chocolate Maker",
        "description": "The Chocolate Maker project is a high-precision chocolate production system implemented on a single-core Arduino. The system can measure both the weight and temperature of the chocolate mixture while offering precise control over water supply and mixing speed by user-defined parameters with a maximum error of 1.5% overall. Users can conveniently monitor system measurements, dispense water, set mixing velocities, and optionally measure temperature via Bluetooth with an integrated HC-05 module. The system incorporates a precision balancing mechanism with a load cell and HX711 amplifier, as well as an adjustable Nema 17 stepper motor for mixing and a DS18B20 sensor for temperature readings, the project achieves simultaneous execution of multiple tasks without compromising precision - a significant achievement on a single-core Arduino.",
        "subject": "Electronic Instrumentation",
        "date": "Jun, 2023",
        "authors": [
            "Tony Montes",
            "Julian Parra",
            "Fernando Álvarez",
            "Santiago Pardo"
        ],
        "technologies": [
            "Arduino",
            "UX",
            "BT HC-05",
            "Concurrency",
            "App Inventor"
        ],
        "tags": [
            "Precision",
            "Sensorics",
            "Automation"
        ],
        "links": {
            "Video": "https://youtu.be/bzOoEHJ-7M0",
            "Github": "https://github.com/t-montes/Chocolatera-Instrumentacion",
            "Documentation": "https://github.com/t-montes/Chocolatera-Instrumentacion/blob/master/Instructivo.pdf"
        },
        "icon": "./img/projects/Chocolate Maker/icon.png",
        "images": [
            "./img/projects/Chocolate Maker/1.png",
            "./img/projects/Chocolate Maker/2.png",
            "./img/projects/Chocolate Maker/3.jpeg",
            "./img/projects/Chocolate Maker/4.png",
            "./img/projects/Chocolate Maker/diagrama-circuital.jpeg"
        ]
    },
    {
        "name": "Avanzo",
        "description": "This project is a contribution to the Avanzo™ company in the implementation of three functionalities: automated analysis of documents required for a loan, automated analysis of applications based on rules, and information exchange with companies. For our implementation, we focused on automating document analysis and credit management. To achieve this, we defined a specific architecture implemented in GCP to enable the planned functionalities: 1. Authentication and role management using Auth0, 2. Deployment of a main front-back server on a custom domain (avanzo.tk for testing) with its SSL certificate, and 3. Distribution of services to two different servers using Kong Gateway: one implemented with Django, with a PostgreSQL database, and another implemented in NestJS with MongoDB. Additionally, within the server responsible for document analysis, the Vision API was used for text extraction through OCR.",
        "subject": "Software Architecture",
        "date": "Dec, 2022",
        "authors": [
            "Tony Montes",
            "Luccas Rojas",
            "Brian Rivera",
            "Thais Tamaio"
        ],
        "technologies": [
            "GCP",
            "Python",
            "TS",
            "Django",
            "PostgreSQL",
            "Auth0",
            "NestJS",
            "MongoDB",
            "Vision API",
            "Kong"
        ],
        "tags": [
            "API",
            "Web Page",
            "Authentication",
            "SQL",
            "NoSQL"
        ],
        "links": {
            "Video": "https://www.youtube.com/watch?v=fphFscUsDJ0",
            "Github Backend Django": "https://github.com/t-montes/ArquiSoft-BackDjango",
            "Github Backend Nestjs": "https://github.com/t-montes/ArquiSoft-BackNestJS"
        },
        "icon": "./img/projects/Avanzo/Equipo.jpg",
        "images": [
            "./img/projects/Avanzo/1.png",
            "./img/projects/Avanzo/2.png",
            "./img/projects/Avanzo/3.png",
            "./img/projects/Avanzo/certi.png",
            "./img/projects/Avanzo/Metateoremas-Despliegue.jpeg",
            "./img/projects/Avanzo/Metateoremas-Componentes.jpeg",
            "./img/projects/Avanzo/Equipo.jpg"
        ]
    },
    {
        "name": "Vamo'",
        "description": "Vamo' is a social media-style mobile application that introduces you to new places to visit nearby, based on a recommendation engine that updates according to your app usage to identify your preferences. The main features of the application include a feed to view top recommendations, a search bar to filter places by criteria (location, cost, name, hours), a view of the detailed information of a specific place, its reviews, and photos taken there, a list of your favorite and saved places, a view of your profile and others', and an engine for searching places with common interests for friend meetups. In addition to allowing users to discover new places, Vamo' also aims to promote the growth of local businesses by giving them higher visibility.",
        "subject": "Design and Innovation of IT Products",
        "date": "Dec, 2022",
        "authors": [
            "Tony Montes",
            "Brian Rivera",
            "Shadith Perez",
            "Daniel Bernal",
            "Obed Cabanzo"
        ],
        "technologies": [
            "JS",
            "React Native",
            "TS",
            "NestJS",
            "PostgreSQL",
            "Figma"
        ],
        "tags": [
            "API",
            "Mobile",
            "App"
        ],
        "links": {
            "Pitch": "https://www.youtube.com/watch?v=wKsywb-x6aE",
            "Prototype Video": "https://youtu.be/RqD0B-SU5U8?t=69",
            "API Documentation": "https://github.com/Vamo-App/VamoApp_Back/blob/master/Vamo%20-%20API%20Documentation.pdf",
            "Github Frontend": "https://github.com/Vamo-App/VamoApp_Front",
            "Github Backend": "https://github.com/Vamo-App/VamoApp_Back"
        },
        "icon": "./img/projects/Vamo/vamo-logo3d2.png",
        "images": [
            "./img/projects/Vamo/act1.png",
            "./img/projects/Vamo/act2.png",
            "./img/projects/Vamo/app1.png",
            "./img/projects/Vamo/app2.png",
            "./img/projects/Vamo/app3.png",
            "./img/projects/Vamo/Vamo UML-v1.jpeg"
        ]
    },
    {
        "name": "Med4Pet",
        "description": "Med4Pet is a web platform that enables a booking system for appointments with vets specializing in specific services. It also incorporates a rating system for vets and clients through reviews. The platform includes various views such as a list of services available on the platform along with their respective veterinarians, a client profile with reviews and information about their pets, a vet profile with contact information, reviews, and a calendar displaying available time slots and scheduled appointments. Additionally, the platform allows the administrator to add new clients, veterinarians, or services. Clients can add reviews and schedule appointments with a specific vet. This project was conceived as an introductory venture into back-end and front-end technologies using the Spring and Angular frameworks.",
        "subject": "Sotfware Development",
        "date": "Dec, 2021",
        "authors": [
            "Tony Montes",
            "Luccas Rojas",
            "Shadith Perez",
            "Daniel Villar",
            "Gabriela Cagua",
            "Carlos Marin"
        ],
        "technologies": [
            "Java",
            "Spring",
            "TS",
            "Angular",
            "H2 DB"
        ],
        "tags": [
            "API",
            "Web Page"
        ],
        "links": {
            "Github Backend": "https://github.com/t-montes/DSW-Med4Pet_Back",
            "Github Frontend": "https://github.com/t-montes/DSW-Med4Pet_Front"
        },
        "icon": "./img/projects/Med4Pet/icon.png",
        "images": [
            "./img/projects/Med4Pet/1.png",
            "./img/projects/Med4Pet/2.png",
            "./img/projects/Med4Pet/3.png",
            "./img/projects/Med4Pet/4.png",
            "./img/projects/Med4Pet/5.png",
            "./img/projects/Med4Pet/6.png"
        ]
    },
    {
        "name": "Frogger",
        "description": "The project is about the implementation of the classic game Frogger with 4 difficulty levels on an FPGA connected to an 8x8 LED matrix and a 4-button pad (up, down, left, and right). The dynamics to consider include an initial line where Frogger appears each time the game restarts, a finish line where Frogger must reach 2 different points, and 6 lines of obstacles consisting of rows of lights that appear with a certain frequency and move at a certain speed. Additionally, a limit of 3 lives per level is considered. The code was implemented in the Hardware Description Language (HDL) Verilog, and entities such as \"exits\", \"logs\" (obstacles), and \"frogger\" were developed along with their interactions through a state machine. This project served as an introductory exploration into programmable cards using HDL and simulation using the ModelSim tool.",
        "subject": "Electronic Digital Systems",
        "date": "Jun, 2021",
        "authors": [
            "Tony Montes",
            "Alejandro Pasachoa",
            "Mateo Ortegon"
        ],
        "technologies": [
            "Verilog",
            "Quartus",
            "ModelSim",
            "FPGA"
        ],
        "tags": [
            "Frogger Game",
            "FPGA"
        ],
        "links": {
            "Video": "https://www.youtube.com/watch?v=bemeV4KzBMI",
            "Documentation": "https://github.com/t-montes/FPGA-Frogger/blob/master/ProjectDesign-M06-Frogger/PDF_froggerG13-WIKI.pdf",
            "Github": "https://github.com/t-montes/FPGA-Frogger"
        },
        "icon": "./img/projects/Frogger/icon.png",
        "images": [
            "./img/projects/Frogger/game.png",
            "./img/projects/Frogger/BB_SYSTEM-froggerG13_final.jpg",
            "./img/projects/Frogger/led_matrix.png",
            "./img/projects/Frogger/SIM_vector1.JPG"
        ]
    },
    {
        "name": "Matyno",
        "description": "Matyno (short for \"Materias y Notas\" in Spanish) was a Python project I created during my second semester. It aimed to provide a convenient and quick way to store university grades, as an alternative to Excel but with Python expressions to ease the calculation of final grades for subjects, occasionally rounding to 0.5 or approximating based on specific criteria. Additionally, it allowed users to easily input Python formulas using the \"eval\" function for enhanced usability. Moreover, Matyno marked my initial experience with implementing a register-login interface for an application.",
        "subject": "Personal",
        "date": "Dec, 2020",
        "authors": [
            "Tony Montes"
        ],
        "technologies": [
            "Python",
            "Tkinter"
        ],
        "tags": [
            "Degree",
            "Grades tracker",
            "CSV"
        ],
        "links": {
            "Github": "https://github.com/t-montes/Matyno"
        },
        "icon": "./img/projects/Matyno/icon.png",
        "images": [
            "./img/projects/Matyno/1.png",
            "./img/projects/Matyno/2.png",
            "./img/projects/Matyno/3.png",
            "./img/projects/Matyno/4.png"
        ]
    },
    {
        "name": "PensuManager",
        "description": "PensuManager, a Python application I crafted with Tkinter during my first semester, is a simple tool for organizing the university curriculum. Initially, I designed it to address my personal requirements as I needed to organize my dual bachelor's pensum but there were no available free tools that adjusted to my requirements. It has remained consistently useful throughout my career, allowing me to adapt my schedule each semester according to my needs, ensuring that I will graduate in 10 semesters. The app shows each course's prerequisites, corequisites, name, code, description, and credit hours. As my first personal project, PensuManager also served as a learning experience in UI design, grid spacing, and the storage of information using CSV files.",
        "subject": "Personal",
        "date": "Aug, 2020",
        "authors": [
            "Tony Montes"
        ],
        "technologies": [
            "Python",
            "Tkinter"
        ],
        "tags": [
            "Pensum Planning",
            "Desktop App",
            "CSV"
        ],
        "links": {
            "Github": "https://github.com/t-montes/PensuManager"
        },
        "icon": "./img/projects/PensuManager/icon.png",
        "images": [
            "./img/projects/PensuManager/1.png",
            "./img/projects/PensuManager/2.png"
        ]
    },
    {
        "name": "Cov-Info Bogotá",
        "description": "Cov-Info Bogotá is a mobile application developed in 2020 to provide useful and summarized information to the people of Bogotá regarding the progress of COVID-19. The application features three main views: one displaying the locations of hospitals, supermarkets, and pharmacies near the user's location; another presenting key news related to the virus in Bogotá; and a last view offering a detailed breakdown of the number of cases in the city. This view also provides the status of cases based on various filters like date, age or sector within the city, utilizing information provided by the city government. For implementation, a web application was created using Flask-Python and deployed on Heroku for seamless integration into the mobile app. Pandas was also employed for filtering and organizing the information to display.",
        "subject": "Introduction to Systems Engineering",
        "date": "May, 2020",
        "authors": [
            "Tony Montes",
            "Brian Rivera",
            "Luisa Fuentes",
            "Daniel Sarmiento"
        ],
        "technologies": [
            "Python",
            "Flask",
            "Pandas",
            "App Inventor"
        ],
        "tags": [
            "COVID-19",
            "Bogotá",
            "Mobile",
            "App"
        ],
        "links": {
            "Video": "https://www.youtube.com/watch?v=6EX2NwzgN9I",
            "Github": "https://github.com/t-montes/Cov-Info-Bogota"
        },
        "icon": "./img/projects/Cov-Info Bogotá/icon.png",
        "images": [
            "./img/projects/Cov-Info Bogotá/1.png",
            "./img/projects/Cov-Info Bogotá/2.png",
            "./img/projects/Cov-Info Bogotá/3.png",
            "./img/projects/Cov-Info Bogotá/4.png",
            "./img/projects/Cov-Info Bogotá/5.png",
            "./img/projects/Cov-Info Bogotá/6.jpeg"
        ]
    }
]